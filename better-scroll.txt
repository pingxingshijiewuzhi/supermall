***Better-Scroll在决定有多少区域可以滚动时，是根据scrollerHeight属性决定***
    scrollerHeight属性是根据Better-Scroll的conent中的子组件的高度
    但是我们的首页中，刚开始在计算ScrollerHeight属性时，是没有将图片就算在内的(因为图片还没加载过来)
    所以计算出来的告诉是错误的
    后来图片加载进来之后又有了新的额高度，但是scrollerHeight属性并没有进行更新
    所以出现滚动问题
如何解决这个问题呢？
    监听每一张图片是否加载完成，只要有一张图片加载完成了，就执行refresh（）
    如何监听图片加载完成了？
        原生的js监听图片:img.onload = function(){}
        Vue中监听@load='方法'
        调用scroll的refresh()



 默认是没有this.$bus的，所以我们在vue.prototype中加入$bus属性
这个属性必须可以发送$emit,所以$bus赋值new Vue()

如何将两个GoodListItem.vue中的事件传入Home.vue中
因为涉及到非父子组件的通信，所以我们这里选择了 事件总线
bus->公交车/总线
Vue.prototype.$bus = newVue()
this.$bus.$emit('事件名称',参数)
this.$bus.$on('事件名称',回调函数(参数))
        
对于refresh非常频繁的问题，进行防抖操作
    防抖debounce/节流throttle
    防抖函数起作用的过程：
        如果我们直接执行refresh，那么refresh函数会被执行30次
        如果将refresh函数传入debounce函数中，生成一个新的函数
        之后在调用非常频繁的时候，就使用新生成的函数
        而新生成的函数，并不会非常频繁的调用，如果下一次执行的非常快，那么会将上一次取消掉


export function debounce(func,delay){
  let timer = null
  return function(...args){
    if(timer) clearTimeout(timer)
    timer = setTimeout(()=>{
      func.apply(this,args)
    },delay)
  }
}

***tabControl的吸顶效果***
获取到tabControl的offsetTop
必须知道滚动到多少时，开始有吸顶效果，这个时候就需要获取tabControl的offsetTop
但是，如果直接在mounted中获取tabControl的offsetTop，那么值是不正确
如何获取正确的值呢？
  监听HomeSwipper中img的加载完成
  加载完成后，发出事件，在Home.vue中，获取正确的值
  补成：
      为了不让HomeSwipper多次发出事件
      可以使用isLoad的变量进行状态的记录
监听滚动，动态的改变tabControl的样式
问题动态的改变tabControl的样式时，会出现两个问题
问题一：下面的商品内容会突然上移
问题二：tabControl虽然设置了fixed，但是也会随着Better-Scroll一起滚出去（组件中transfrom：translate的原因）
其他方案解决停留问题
在最上面，多复制一份PlaceHoderTabControl组件对象，利用他来实现停留效果
当用户滚动到一定位置时，PlaceHodlerTabControl显示出来
当用户滚动没有到达一定位置时，PlaceHodlerTabControl隐藏起来

***让Home保持原来的状态***
让Home不要随意销毁掉
keep-alive
让Home保持原来状态
离开时，保存一个位置信息saveY
进来时，将位置设置为原来保存的位置saveY信息即可